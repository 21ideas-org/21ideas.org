/* You can add custom styles here. */

// @import "plugins/numbered";

.menuSep {
  margin: 2rem 0;
}

.pageCover {
  text-align: center;
  img {
    max-width: 100%;
  }
}

.pageDate {
  color: var(--gray-500);
  margin-bottom: 2em;
}

// Use Montserrat for seciton (_index) headings
// https://gohugo.io/methods/page/kind/
.book-page-section h1 {
  font-family: 'Montserrat', sans-serif;
  font-weight: 700;
  font-size: 70px;
}

@media screen and (max-width: 768px) {
  .book-page-section h1 {
    font-size: 50px;  // Adjust this value as needed
  }
}

@media screen and (max-width: 480px) {
  .book-page-section h1 {
    font-size: 35px;  // Adjust this value for smaller screens
  }
}

@media screen and (max-width: 1050px) {
  .nostrEmbedCard .nostrichLink {
    display: none;
  }
}

.book-post {
  &_cover + h2 {
    margin-top: 0.8rem;
  }
  h2 {
    margin-bottom: 0.5rem;
  }
  &_date {
    color: var(--gray-500);
    font-size: 0.8em;
  }
}

.book-menu-content {
  // This rule enables the footer.
  display: flex;
  flex-direction: column;

  nav {
    flex: 1;
  }

  footer {
    text-align: center;
    padding: 1rem;
  }
}

.menuSocialButton {
  display: inline-block;
  fill: currentColor;
  width: 1.4rem;
  height: 1.4rem;
  opacity: 0.4;
}

:root {
  /* Text color variables */
  --card-text-color-light: #000000; /* Text color for light theme */
  --card-text-color-dark: #ffffff;  /* Text color for dark theme */

  /* Shadow color variables */
  --card-shadow-light: rgba(0, 0, 0, 0.2); /* Black shadow for light theme */
  --card-shadow-dark: rgba(0, 0, 0, 0.2); /* White shadow for dark theme */

  /* Box color variables */
  --box-color-light: rgb(248, 249, 250); /* Box color for light theme */
  --box-color-dark: rgb(73, 78, 84);     /* Box color for dark theme */

  --body-background-rgb: 255, 255, 255; // Light theme
}

[data-theme="dark"] {
  --body-background-rgb: 20, 20, 20; // Dark theme
}

@media (prefers-color-scheme: dark) {
  :root {
    --card-text-color: var(--card-text-color-dark);
    --card-shadow-color: var(--card-shadow-dark);
    --box-color: var(--box-color-dark);
  }
}

@media (prefers-color-scheme: light) {
  :root {
    --card-text-color: var(--card-text-color-light);
    --card-shadow-color: var(--card-shadow-light);
    --box-color: var(--box-color-light);
  }
}

.custom-page {
  display: grid;                          /* Enables grid layout */
  grid-template-columns: repeat(2, 1fr);  /* Creates 2 equal-width columns */
  grid-template-rows: repeat(2, auto);    /* Creates 2 rows with automatic height based on content */
  gap: 20px;                              /* Space between grid items (cards) */
  justify-content: center;                /* Center the grid horizontally (optional) */

  @media screen and (max-width: 768px) {  /* Adjust for mobile screens */
    grid-template-columns: 1fr;  /* 1 column for smaller screens */
    .card img {
      height: 200px; /* Adjust this value as needed for mobile */
  }
  }
}

@media (min-width: 769px) and (max-width: 1050px) {
  .custom-page {
    grid-template-columns: repeat(2, 1fr); /* 2 columns layout */
  }
}

.card {
  position: relative;
  background-color: var(--box-color);
  color: var(--card-text-color);
  border-radius: 5px;
  box-shadow: 0 4px 8px var(--card-shadow-color);
  overflow: hidden;
  margin: 20px auto;
  text-align: center;
  display: flex;  
  flex-direction: column;  
  justify-content: space-between;
  max-width: 350px; /* Set a maximum width for the card */  
  width: 90%; /* Ensure the card takes up the available space */
}

.card img {
  width: 90%;
  padding-top: 15px;
  min-height: 200px; /* Adjust this based on the expected height for 3 lines */
  margin: 0 auto;
  height: auto;
  display: block;
  object-fit: cover;
  transition: opacity 0.3s ease;
  transition: filter 0.3s ease; /* Smooth transition for filter */
  object-fit: cover;
}

.hover-text {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.7); /* Dark semi-transparent background */
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0; /* Initially hidden */
  transition: opacity 0.3s ease; /* Smooth transition */
  padding: 10px;
  box-sizing: border-box;
  text-align: center;
  pointer-events: none;
}

.card:hover .hover-text {
  opacity: 1;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
}

.card:hover .card-content {
  color: grey;
  filter: blur(2px); /* Apply blur effect */
}

.card:hover .card-content h2,
.card:hover .card-content p {
  color: grey; /* Change text color to grey on hover */
  opacity: 0.3;
}

.card:hover .cover-image {
  filter: blur(10px); /* Apply blur effect to the cover image */
}

.card:hover .button:hover {
  background-color: darkorange; /* Darken background color on button hover */
  /* Ensure no changes on button hover */
}

.card:hover .button {
  background-color: orange; /* Maintain button background color on card hover */
  color: white; /* Ensure text color stays white */
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3); /* Maintain shadow effect */
  transform: scale(1.02); /* Keep button slightly increased size */
}

.card-content {
  padding: 15px;
  color: white;
  display: flex;
  flex-direction: column;
  justify-content: space-between; /* Ensure buttons are at the bottom */
  height: 100%;
  box-sizing: border-box;
  color: var(--card-text-color);
  transition: filter 0.3s ease;
}

.card h2 {
  margin-top: -10px;
  min-height: 60px; /* Adjust this based on the expected height for 3 lines */
  line-height: 1em; /* Adjust line height for better spacing */
  overflow: hidden; /* Ensure content doesn't overflow */
  text-overflow: ellipsis; /* Add ellipsis if the text is too long */
}

.card p {
  flex-grow: 1;
  margin-top: -10px;
  margin-bottom: 10px; /* Space between paragraph and buttons */
  min-height: 45px; /* Fixed height for the description/abstract */
  overflow: hidden; /* Prevent overflow if the text is too long */
  text-overflow: ellipsis; /* Add ellipsis if the text is too long */
}

.button-container {
  position: relative;
  z-index: 1; /* Ensure buttons stay above the blurred content */
  display: flex;
  justify-content: center;
  margin-top: auto; /* Push buttons to the bottom */
  padding-bottom: 20px;
}

.button {
  display: inline-block;
  padding: 6px 12px;
  margin: 0 5px;
  background-color: #ff9500;
  color: white;
  text-decoration: none;
  border-radius: 3px;
  font-weight: bold;
  text-decoration: none;
}

.button:hover {
  background-color: darkorange; /* Darken the background color */
  color: white; /* Ensure text color stays white */
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3); /* Add shadow for a "pop-out" effect */
  transform: scale(1.02); /* Slightly increase size */
  text-decoration: none !important; /* Ensure text isn't underlined */
}

.button:visited {
  color: white !important; /* Maintain the same color as unvisited */
  background-color: orange !important;
  text-decoration: none !important; /* Ensure no underlines or changes */
}

// Tags in search results
.book-search {
  .tags {
    margin-top: 0.25rem;
    
    .tag {
      display: inline-block;
      padding: 0.1rem 0.5rem;
      margin-right: 0.5rem;
      font-size: 0.8rem;
      background: #f0f0f0;
      border-radius: 3px;
      color: #666;
    }
  }
}

.metrics-container {
  cursor: pointer;
}

/* Internal link preview styles */
.internal-link-wrapper {
  position: relative;
  display: inline-block;
}

.internal-link {
  color: var(--color-link);
  text-decoration: none;
  
  &:hover {
    text-decoration: underline;
    
    & + .link-preview {
      opacity: 1;
      transform: translateY(0);
      transition-delay: 0.3s; // Delay before showing
    }
  }
}

.link-preview {
  opacity: 0;
  transform: translateY(-5px);
  transition: all 0.2s ease-in-out;
  
  &.floating {
    position: fixed;
    z-index: 1000;
    max-width: 500px;
    min-width: 360px;
    background: var(--body-background);
    border: 1px solid var(--gray-200);
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    padding: 1.25rem;
    opacity: 0.95;

    // Touch device optimization
    @media (hover: none) and (pointer: coarse) {
      pointer-events: auto; // Enable interaction on touch devices
      position: fixed;
      bottom: 20px !important;
      left: 50% !important;
      transform: translateX(-50%);
      max-height: 60vh; // Limit height on mobile
      overflow-y: auto; // Enable scrolling if needed
      -webkit-overflow-scrolling: touch; // Smooth scrolling on iOS
      
      // Add subtle bounce effect for touch feedback
      &.active {
        animation: preview-bounce 0.3s ease;
      }
    }
    
    // Mobile optimization
    @media screen and (max-width: 768px) {
      max-width: 85vw;
      min-width: auto;
      margin: 0 20px;
      
      .preview-content.page {
        flex-direction: column;
        gap: 1rem;
        
        .preview-image {
          width: 100%;
          height: auto;
          max-height: 200px;
          margin: 0 auto;
        }
        
        .preview-text {
          width: 100%;
          
          h4 {
            font-size: 1rem;
            margin-bottom: 0.5rem;
          }
          
          p {
            font-size: 0.9rem;
            line-height: 1.5;
            -webkit-line-clamp: 4; // Show fewer lines on mobile
          }
        }
      }
    }
    
    .preview-content {
      // Glossary preview
      &.glossary {
        h4 {
          margin: 0 0 0.5rem 0;
          color: var(--body-font-color);
          font-size: 1rem;
          font-weight: 600;
        }
        
        p {
          margin: 0;
          color: var(--gray-500);
          font-size: 0.9rem;
          line-height: 1.5;
          max-height: 200px;
          overflow: hidden;
          display: -webkit-box;
          -webkit-line-clamp: 8;
          -webkit-box-orient: vertical;
          text-overflow: ellipsis;
        }
      }

      // Page preview
      &.page {
        display: flex;
        gap: 1.25rem;
        align-items: flex-start;
        max-width: 100%;

        .preview-image {
          width: 150px;
          height: 150px;
          flex-shrink: 0;
          border-radius: 8px;
          object-fit: cover;
          background-color: var(--gray-100);
        }

        .preview-text {
          flex: 1;
          min-width: 0;

          h4 {
            margin: 0 0 0.75rem 0;
            color: var(--body-font-color);
            font-size: 1.1rem;
            font-weight: 600;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
          }

          p {
            margin: 0;
            color: var(--gray-500);
            font-size: 0.95rem;
            line-height: 1.6;
            overflow: hidden;
            display: -webkit-box;
            -webkit-line-clamp: 5;
            -webkit-box-orient: vertical;
            text-overflow: ellipsis;
          }
        }

        &.no-image {
          .preview-text {
            width: 100%;
            padding: 0.5rem 0;
            
            p {
              -webkit-line-clamp: 7;
            }
          }
        }
      }
    }
  }
}

@keyframes loading-spinner {
  to {
    transform: rotate(360deg);
  }
}

// Add bounce animation
@keyframes preview-bounce {
  0% { transform: translateX(-50%) translateY(5px); }
  50% { transform: translateX(-50%) translateY(-2px); }
  100% { transform: translateX(-50%) translateY(0); }
}
